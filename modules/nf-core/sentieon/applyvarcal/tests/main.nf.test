nextflow_process {

    name "Test Process SENTIEON_APPLYVARCAL"
    config "./nextflow.config"
    script "../main.nf"
    process "SENTIEON_APPLYVARCAL"
   
    tag "modules"
    tag "modules_nfcore"
    tag "sentieon"
    tag "sentieon/applyvarcal"
   
    
    
    test("test_sentieon_applyvarcal") {
        
        when {
            params {
                module_args = '--var_type SNP --sensitivity 99.0'
            }
            process {
                """
                input[0] = [[id:'test'],// meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/haplotypecaller_calls/test2_haplotc.ann.vcf.gz',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/haplotypecaller_calls/test2_haplotc.ann.vcf.gz.tbi',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.recal',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.recal.idx',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.tranches',checkIfExists:true)
                    ]
                input[1] = [[:],fasta]
                input[2] = [[:],fai]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
    
    
    test("test_sentieon_applyvarcal -- stub") {
        options '-stub'
        when {
            params {
                module_args = '--var_type SNP --sensitivity 99.0'
            }
            process {
                """
                input[0] = [[id:'test'],// meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/haplotypecaller_calls/test2_haplotc.ann.vcf.gz',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/haplotypecaller_calls/test2_haplotc.ann.vcf.gz.tbi',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.recal',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.recal.idx',checkIfExists:true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.tranches',checkIfExists:true)
                    ]
                input[1] = [[:],fasta]
                input[2] = [[:],fai]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}